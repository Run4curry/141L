0010_00000 // mov 41
0000_10000 // lw r4, r0
1000_00000 // inc r0
0000_01000 // lw r2, r0
1000_00000 // inc r0
0000_10100 // lw r5, r0
0010_00001 // mov enc64
1100_00001 // movreg seed
1100_00000 // movreg tap_addr
0010_00010 // mov space2
0011_10110 // xor r5, r2
0001_10101 // sw r5, r1
1000_00010 // inc r1
1010_01000 // dec r4
1100_00011 // movreg backseed
1100_00010 // movreg tap_addr_back
0100_10110 // and r5, r2
1001_10100 // par r10
0110_01010 // lsl r5
0101_10110 // or r5, r2
1100_00010 // movreg tap_addr_back
0111_00000 // b padding
0010_00011 // mov zero
1100_00001 // movreg seed
1100_00000 // movreg tap_addr
0000_01000 // lw r2, r0
0011_10110 // xor r5, r2
0001_10101 // sw r5, r1
1000_00010 // inc r1
1000_00000 // inc r0
1100_00011 // movreg backseed
1100_00010 // movreg tap_addr_back
0100_10110 // and r5, r2
1001_10100 // par r10
0110_01010 // lsl r5
0101_10110 // or r5, r2
1100_00010 // movreg tap_addr_back
0111_00001 // b message
0111_00010 // b end
1100_00001 // movreg seed
1100_00000 // movreg tap_addr
0010_00010 // mov space2
0011_10110 // xor r5, r2
0001_10101 // sw r5, r1
1000_00010 // inc r1
1100_00011 // movreg backseed
1100_00010 // movreg tap_addr_back
0100_10110 // and r5, r2
1001_10100 // par r10
0110_01010 // lsl r5
0101_10110 // or r5, r2
1100_00010 // movreg tap_addr_back
0111_00011 // b morepadding
1011_00000 // stop
